<project name="asl-fall17-project" default="jar" basedir=".">
    <description>
        ANT Build File for ASL Fall 2017 Project
    </description>

    <tstamp/>

    <!-- set global properties for this build -->
    <property name="nethzid" value="pstefano"/>
    <property name="src.dir" location="src"/>
    <property name="build.dir" location="build"/>
    <property name="dist.dir" location="dist"/>
    <property name="lib.dir" value="lib"/>
    <property name="resources.dir" value="resources"/>
    <property name="jarfile" value="${dist.dir}/Middleware-${DSTAMP}.jar"/>

    <!-- Set classpaths -->
    <path id="my-classpath">
        <fileset dir="${lib.dir}">
            <include name="log4j-core-2.9.1.jar"/>
            <include name="log4j-api-2.9.1.jar"/>
        </fileset>
    </path>
    <target name="init" depends="clean">
        <!-- Create the time stamp -->
        <!-- Create the build directory structure used by compile -->
        <mkdir dir="${build.dir}"/>
    </target>

    <target name="compile" depends="init"
            description="compile the source">
        <!-- Compile the java code from ${src} into ${build} -->
        <javac srcdir="${src.dir}" destdir="${build.dir}" target="1.8" source="1.8">
            <classpath refid="my-classpath"/>
            <exclude name="test/**/"/>
        </javac>
    </target>

    <target name="dist" depends="compile"
            description="generate the distribution">
        <!-- Create the distribution directory -->
        <mkdir dir="${dist.dir}"/>

        <!-- Copy resources to /build -->
        <copydir src="${resources.dir}" dest="${build.dir}"/>

        <!-- Manifest classpath -->
        <manifestclasspath property="manifest.classpath" jarfile="${jarfile}">
            <classpath refid="my-classpath"/>
        </manifestclasspath>

        <!-- Put everything in ${build} into the JAR file -->
        <jar jarfile="${jarfile}" basedir="${build.dir}">
            <manifest>
                <attribute name="Created-By" value="${ant.java.version}"/>
                <attribute name="Main-Class" value="main.java.asl.MiddlewareMain"/>
                <attribute name="Class-Path" value="${manifest.classpath}"/>
            </manifest>
            <zipgroupfileset dir="${lib.dir}" includes="**/*.jar" />
        </jar>
    </target>

    <target name="run" depends="dist"
            description="run the application">
        <!-- Run the application -->
        <java jar="${jarfile}" fork="true"/>
    </target>


    <target name="jar" depends="compile" description="generate the distribution">
        <!-- Create the distribution directory -->
        <mkdir dir="${dist.dir}"/>

        <!-- Copy resources to /build -->
        <copydir src="${resources.dir}" dest="${build.dir}"/>

        <!-- Manifest classpath -->
        <manifestclasspath property="manifest.classpath" jarfile="${jarfile}">
            <classpath refid="my-classpath"/>
        </manifestclasspath>

        <!-- Put everything in ${build} into the jar file -->
        <jar jarfile="${dist.dir}/middleware-${nethzid}.jar" basedir="${build.dir}" compress="true">
            <fileset dir="${src.dir}" includes="**/*.java"/>
            <manifest>
                <attribute name="Main-Class" value="main.java.asl.RunMW"/>
                <attribute name="Class-Path" value="${manifest.classpath}"/>
            </manifest>
        </jar>
    </target>

    <target name="clean"
            description="clean up">
        <!-- Delete the ${build} and ${dist} directory trees -->
        <delete dir="${build.dir}"/>
        <delete dir="${dist.dir}"/>
    </target>
</project>
